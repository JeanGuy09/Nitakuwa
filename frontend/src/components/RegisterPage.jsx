import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { Button } from './ui/button';
import { Input } from './ui/input';
import { Label } from './ui/label';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { Alert, AlertDescription } from './ui/alert';
import { useAuth } from '../contexts/AuthContext';
import { useToast } from '../hooks/use-toast';

const RegisterPage = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    password: '',
    confirmPassword: '',
    university: '',
    year: '',
    field: ''
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  
  const { register } = useAuth();
  const navigate = useNavigate();
  const { toast } = useToast();

  const universities = [
    'Universit√© de Kinshasa',
    'Universit√© de Lubumbashi',
    'Universit√© de Kisangani',
    'Universit√© P√©dagogique Nationale',
    'Universit√© Protestante au Congo',
    'Institut Sup√©rieur de Commerce',
    'Institut Sup√©rieur des Techniques Appliqu√©es',
    'Universit√© Libre des Pays des Grands Lacs',
    'Universit√© Simon Kimbangu',
    'Autre'
  ];

  const years = [
    'Premi√®re ann√©e',
    'Deuxi√®me ann√©e',
    'Troisi√®me ann√©e',
    'Quatri√®me ann√©e',
    'Cinqui√®me ann√©e',
    'Master',
    'Doctorat',
    'Dipl√¥m√©'
  ];

  const fields = [
    'Informatique / Technologies',
    'M√©decine / Sant√©',
    'Ing√©nierie',
    '√âconomie / Gestion',
    'Droit',
    'Sciences Sociales',
    '√âducation / P√©dagogie',
    'Arts / Communication',
    'Agriculture',
    'G√©ologie / Mines',
    'Autre'
  ];

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSelectChange = (name, value) => {
    setFormData({
      ...formData,
      [name]: value
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    // Validation
    if (formData.password !== formData.confirmPassword) {
      setError('Les mots de passe ne correspondent pas');
      setLoading(false);
      return;
    }

    if (formData.password.length < 6) {
      setError('Le mot de passe doit contenir au moins 6 caract√®res');
      setLoading(false);
      return;
    }

    try {
      const result = await register(formData);
      if (result.success) {
        toast({
          title: "Compte cr√©√© avec succ√®s !",
          description: `Bienvenue ${result.user.name}, votre parcours professionnel commence maintenant.`,
        });
        navigate('/dashboard');
      } else {
        setError(result.error || 'Erreur lors de la cr√©ation du compte');
      }
    } catch (err) {
      setError('Erreur lors de la cr√©ation du compte');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 py-12 px-4">
      <div className="max-w-md w-full mx-auto space-y-8">
        <div className="text-center">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            Rejoindre KONGENGA
          </h1>
          <p className="text-gray-600">
            Cr√©ez votre compte pour commencer votre parcours professionnel en RDC
          </p>
        </div>

        <Card>
          <CardHeader>
            <CardTitle>Cr√©er votre compte √©tudiant</CardTitle>
            <CardDescription>
              Compl√©tez vos informations pour personnaliser votre exp√©rience
            </CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-4">
              {/* Personal Information */}
              <div className="space-y-2">
                <Label htmlFor="name">Nom complet</Label>
                <Input
                  id="name"
                  name="name"
                  type="text"
                  placeholder="Jean Mukongo"
                  value={formData.name}
                  onChange={handleChange}
                  required
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="email">Adresse email</Label>
                <Input
                  id="email"
                  name="email"
                  type="email"
                  placeholder="jean.mukongo@example.com"
                  value={formData.email}
                  onChange={handleChange}
                  required
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="password">Mot de passe</Label>
                <Input
                  id="password"
                  name="password"
                  type="password"
                  placeholder="Au moins 6 caract√®res"
                  value={formData.password}
                  onChange={handleChange}
                  required
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="confirmPassword">Confirmer le mot de passe</Label>
                <Input
                  id="confirmPassword"
                  name="confirmPassword"
                  type="password"
                  placeholder="R√©p√©tez votre mot de passe"
                  value={formData.confirmPassword}
                  onChange={handleChange}
                  required
                />
              </div>

              {/* Academic Information */}
              <div className="pt-4 border-t border-gray-200">
                <h3 className="font-medium text-gray-900 mb-4">Informations acad√©miques</h3>
                
                <div className="space-y-4">
                  <div className="space-y-2">
                    <Label htmlFor="university">Universit√© / Institution</Label>
                    <Select onValueChange={(value) => handleSelectChange('university', value)}>
                      <SelectTrigger>
                        <SelectValue placeholder="S√©lectionnez votre universit√©" />
                      </SelectTrigger>
                      <SelectContent>
                        {universities.map((university) => (
                          <SelectItem key={university} value={university}>
                            {university}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="year">Niveau d'√©tudes</Label>
                    <Select onValueChange={(value) => handleSelectChange('year', value)}>
                      <SelectTrigger>
                        <SelectValue placeholder="S√©lectionnez votre niveau" />
                      </SelectTrigger>
                      <SelectContent>
                        {years.map((year) => (
                          <SelectItem key={year} value={year}>
                            {year}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="field">Domaine d'√©tudes</Label>
                    <Select onValueChange={(value) => handleSelectChange('field', value)}>
                      <SelectTrigger>
                        <SelectValue placeholder="S√©lectionnez votre domaine" />
                      </SelectTrigger>
                      <SelectContent>
                        {fields.map((field) => (
                          <SelectItem key={field} value={field}>
                            {field}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                </div>
              </div>

              {error && (
                <Alert className="border-red-200 bg-red-50">
                  <AlertDescription className="text-red-800">
                    {error}
                  </AlertDescription>
                </Alert>
              )}

              <Button 
                type="submit" 
                className="w-full bg-gradient-to-r from-pink-500 to-rose-500 hover:from-pink-600 hover:to-rose-600 text-white"
                disabled={loading}
              >
                {loading ? 'Cr√©ation du compte...' : 'Cr√©er mon compte'}
              </Button>

              <div className="text-center pt-4">
                <p className="text-sm text-gray-600">
                  D√©j√† un compte ?{' '}
                  <Link to="/login" className="text-pink-600 hover:text-pink-700 font-medium">
                    Se connecter
                  </Link>
                </p>
              </div>
            </form>

            {/* Benefits */}
            <div className="mt-8 p-4 bg-pink-50 rounded-lg">
              <h4 className="font-medium text-pink-900 mb-3">üéØ Avec votre compte KONGENGA, vous pourrez :</h4>
              <ul className="text-sm text-pink-800 space-y-2">
                <li>‚Ä¢ Sauvegarder vos emplois favoris</li>
                <li>‚Ä¢ Suivre votre progression de carri√®re</li>
                <li>‚Ä¢ Recevoir des recommandations personnalis√©es</li>
                <li>‚Ä¢ Acc√©der √† des formations sp√©cialis√©es</li>
                <li>‚Ä¢ Connecter avec des professionnels du secteur</li>
              </ul>
            </div>
          </CardContent>
        </Card>

        <div className="text-center">
          <Link to="/" className="text-pink-600 hover:text-pink-700 font-medium">
            ‚Üê Retour √† l'accueil
          </Link>
        </div>
      </div>
    </div>
  );
};

export default RegisterPage;